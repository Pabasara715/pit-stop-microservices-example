name: Build, Push, and Deploy to AKS

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Find Changed Service
        id: changed_files
        uses: tj-actions/changed-files@v35
        with:
          files: |
            src/**
          files_ignore: |
            src/k8s/**

      # --- THIS STEP IS MODIFIED ---
      - name: Set Service Name and Path
        id: set_service
        if: steps.changed_files.outputs.any_changed == 'true'
        run: |
          SERVICE_PATH_ORIGINAL=$(echo "${{ steps.changed_files.outputs.all_changed_files }}" | head -n 1 | cut -d'/' -f2)
          echo "service_name=${SERVICE_PATH_ORIGINAL,,}" >> $GITHUB_OUTPUT
          echo "service_path=${SERVICE_PATH_ORIGINAL}" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        if: steps.changed_files.outputs.any_changed == 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # --- THIS STEP IS MODIFIED ---

      - name: Build, Tag, and Push to Docker Hub
        if: steps.changed_files.outputs.any_changed == 'true'
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          SERVICE_NAME: ${{ steps.set_service.outputs.service_name }}
          SERVICE_PATH: ${{ steps.set_service.outputs.service_path }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo "Building service: $SERVICE_NAME from path: src/$SERVICE_PATH"
          docker build -t $DOCKERHUB_USERNAME/pitstop-$SERVICE_NAME:$IMAGE_TAG -f src/$SERVICE_PATH/Dockerfile src/$SERVICE_PATH
          docker push $DOCKERHUB_USERNAME/pitstop-$SERVICE_NAME:$IMAGE_TAG

      - name: Update image tag in deployment YAML
        if: steps.changed_files.outputs.any_changed == 'true'
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          SERVICE_NAME: ${{ steps.set_service.outputs.service_name }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          sed -i "s|image: $DOCKERHUB_USERNAME/pitstop-$SERVICE_NAME:.*|image: $DOCKERHUB_USERNAME/pitstop-$SERVICE_NAME:$IMAGE_TAG|g" src/k8s/$SERVICE_NAME.yaml

      - name: Deploy Service to AKS
        if: steps.changed_files.outputs.any_changed == 'true'
        env:
          SERVICE_NAME: ${{ steps.set_service.outputs.service_name }}
        run: |
          kubectl apply -f src/k8s/$SERVICE_NAME.yaml -n pitstop

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set kubectl context for AKS
        uses: azure/aks-set-context@v3
        with:
          resource-group: 'pitstop-resources'
          cluster-name: 'pitstop-aks-cluster'

      - name: Install istioctl
        run: |
          curl -L https://istio.io/downloadIstio | sh -
          echo "$HOME/.istioctl/bin" >> $GITHUB_PATH

      - name: Install Istio Control Plane
        run: |
          cd src/k8s/istio
          chmod +x *.sh
          ./install-istio.sh

      - name: Deploy All Services to EKS
        run: |
          cd src/k8s/scripts
          chmod +x start-all.sh
          ./start-all.sh --istio
